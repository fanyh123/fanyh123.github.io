<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://note.geekju.cn/</id>
    <title>GeekNotes</title>
    <updated>2019-07-25T12:52:53.823Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://note.geekju.cn/"/>
    <link rel="self" href="http://note.geekju.cn//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>http://note.geekju.cn//images/avatar.png</logo>
    <icon>http://note.geekju.cn//favicon.ico</icon>
    <rights>All rights reserved 2019, GeekNotes</rights>
    <entry>
        <title type="html"><![CDATA[MyBatis 中 @Param 注解的四种使用场景]]></title>
        <id>http://note.geekju.cn//post/mybatis-zhong-param-zhu-jie-de-si-chong-shi-yong-chang-jing</id>
        <link href="http://note.geekju.cn//post/mybatis-zhong-param-zhu-jie-de-si-chong-shi-yong-chang-jing">
        </link>
        <updated>2019-07-25T09:50:43.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>第一种：方法有多个参数，需要 @Param 注解</li>
</ul>
<pre><code>@Mapper
public interface UserMapper {
    Integer insert(@Param(&quot;username&quot;) String username, @Param(&quot;address&quot;) String address);
}
</code></pre>
<p>对应的 XML 文件如下：</p>
<pre><code>&lt;insert id=&quot;insert&quot; parameterType=&quot;org.javaboy.helloboot.bean.User&quot;&gt;
    insert into user (username,address) values (#{username},#{address});
&lt;/insert&gt;
</code></pre>
<p>这是最常见的需要添加 @Param 注解的场景。</p>
<ul>
<li>第二种：方法参数要取别名，需要 @Param 注解
当需要给参数取一个别名的时候，我们也需要 @Param 注解，例如方法定义如下：</li>
</ul>
<pre><code>@Mapper
public interface UserMapper {
    User getUserByUsername(@Param(&quot;name&quot;) String username);
}
</code></pre>
<p>对应的 XML 文件如下：</p>
<pre><code>&lt;select id=&quot;getUserByUsername&quot; parameterType=&quot;org.javaboy.helloboot.bean.User&quot;&gt;
    select * from user where username=#{name};
&lt;/select&gt;
</code></pre>
<p>这种需求不多</p>
<ul>
<li>第三种：XML 中的 SQL 使用了 $ ，那么参数中也需要 @Param 注解
<strong>会有注入漏洞的问题，但是有的时候你不得不使用 符号</strong>，例如要传入列名或者表名的时候，这个时候必须要添加 @Param 注解，例如：</li>
</ul>
<pre><code>@Mapper
public interface UserMapper {
    List&lt;User&gt; getAllUsers(@Param(&quot;order_by&quot;)String order_by);
}
</code></pre>
<p>对应的 XML 定义如下：</p>
<pre><code>&lt;select id=&quot;getAllUsers&quot; resultType=&quot;org.javaboy.helloboot.bean.User&quot;&gt;
    select * from user
    &lt;if test=&quot;order_by!=null and order_by!=''&quot;&gt;
        order by ${order_by} desc
    &lt;/if&gt;
&lt;/select&gt;
</code></pre>
<ul>
<li>第四种:那就是动态 SQL ，也是我在工作中踩过的坑如果在动态 SQL 中使用了参数作为变量，那么也需要 @Param 注解，即使你只有一个参数。
如果我们在动态 SQL 中用到了 参数作为判断条件，那么也是一定要加 @Param 注解的，例如如下方法：</li>
</ul>
<pre><code>@Mapper
public interface UserMapper {
    List&lt;User&gt; getUserById(@Param(&quot;id&quot;)Integer id);
}
</code></pre>
<p>定义出来的 SQL 如下：</p>
<pre><code>&lt;select id=&quot;getUserById&quot; resultType=&quot;org.javaboy.helloboot.bean.User&quot;&gt;
    select * from user
    &lt;if test=&quot;id!=null&quot;&gt;
        where id=#{id}
    &lt;/if&gt;
&lt;/select&gt;
</code></pre>
<p>这种情况，即使只有一个参数，也需要添加 @Param 注解，而这种情况却经常被人忽略！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>http://note.geekju.cn//post/hello-gridea</id>
        <link href="http://note.geekju.cn//post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>